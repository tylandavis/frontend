/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
	collections: {
		users: User;
		pages: Page;
		posts: Post;
		work: Work;
		media: Media;
		'payload-preferences': PayloadPreference;
		'payload-migrations': PayloadMigration;
	};
	globals: {
		navigation: Navigation;
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
	id: string;
	updatedAt: string;
	createdAt: string;
	email: string;
	resetPasswordToken?: string | null;
	resetPasswordExpiration?: string | null;
	salt?: string | null;
	hash?: string | null;
	loginAttempts?: number | null;
	lockUntil?: string | null;
	password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
	id: string;
	title: string;
	description: string;
	slug: string;
	content: (TextBlock | MediaBlock | ListBlock)[];
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock".
 */
export interface TextBlock {
	label?: string | null;
	text: {
		[k: string]: unknown;
	}[];
	id?: string | null;
	blockName?: string | null;
	blockType: 'textBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
	media?: string | Media | null;
	caption?: string | null;
	id?: string | null;
	blockName?: string | null;
	blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
	id: string;
	alt?: string | null;
	prefix?: string | null;
	updatedAt: string;
	createdAt: string;
	url?: string | null;
	filename?: string | null;
	mimeType?: string | null;
	filesize?: number | null;
	width?: number | null;
	height?: number | null;
	sizes?: {
		full?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		mobile?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		thumbnail?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ListBlock".
 */
export interface ListBlock {
	label?: string | null;
	listType?: ('work' | 'posts' | 'links') | null;
	projects?: (string | Work)[] | null;
	posts?: (string | Post)[] | null;
	links?:
		| {
				label?: string | null;
				link?: {
					linkType?: ('internal' | 'external') | null;
					internalLink?: (string | null) | Page;
					externalLink?: string | null;
					newTab?: boolean | null;
				};
				id?: string | null;
		  }[]
		| null;
	id?: string | null;
	blockName?: string | null;
	blockType: 'listBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work".
 */
export interface Work {
	id: string;
	title: string;
	tagline: string;
	image: string | Media;
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
	id: string;
	title: string;
	excerpt?: string | null;
	date?: string | null;
	content: (TextBlock | MediaBlock | ListBlock)[];
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
	id: string;
	user: {
		relationTo: 'users';
		value: string | User;
	};
	key?: string | null;
	value?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
	id: string;
	name?: string | null;
	batch?: number | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
	id: string;
	pages?:
		| {
				page?: (string | null) | Page;
				id?: string | null;
		  }[]
		| null;
	updatedAt?: string | null;
	createdAt?: string | null;
}
